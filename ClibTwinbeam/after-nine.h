/*  after-nine.h | 'expressive timeserie' and 'bleeding on trees'. */

/* #define EXPERIMENTâ‚‹BRIEFED */

/* rtâ‚‹namespace after9â‚‹variables { int structaâ‚‹initâ‚‹error; }; */

template <typename E> struct vector { struct structa inner; 
  consteval unsigned bytesâ‚‹perâ‚‹tile() { return sizeof(E) <= 4096 ? 4096 : sizeof(E); }
  vector() { if (structaâ‚‹init(sizeof(E),bytesâ‚‹perâ‚‹tile(),&inner,Alloc)) { 
   /* PultðŸ’¡(after9-variables::structaâ‚‹initâ‚‹error); */ } }
  ~vector() { deinitâ‚‹structa(&inner,Fallow); }
  E& operator[](__builtin_int_t idx) { return (E&)structaâ‚‹at(idx,inner); }
  int append(const E& elem) { return copyâ‚‹appendâ‚‹items(1,elem,inner,Alloc); }
  __builtin_int_t count() { return structaâ‚‹count(&inner); }
};

typedef vector<char32Ì„_t> unicodeâ‚‹string;


