/*  ·õü-test-timeserie.cpp | inner code in bank. (DOES‚ÇãNOT‚ÇãREQUIRE‚ÇãLIBC‚Å∫‚Å∫.) */

import ClibTwinbeam;

union historypod two‚Çãreal‚Çãaddition(union historypod x‚ÇÅ, union historypod x‚ÇÇ)
{
   simd_t·µ¶ onesum = __builtin_simd_add·µ¶(x‚ÇÅ.two‚Çãreal,x‚ÇÇ.two‚Çãreal);
   union historypod sum = { .two‚Çãreal=onesum };
   return sum;
}

UNITTEST(Timeserie‚Çã1)
{
   struct timeserie serie1;
   version‚Çãts revision;
   if (timeserie‚Çãinit(&revision,101,5,&serie1)) { return; }
   
   struct Unicodes key1 = { 4, U"abcd" };
   union historypod pod1 = { .two‚Çãreal=simd_init·µ¶(1.0) };
   struct ùüΩbit‚Çãtext‚Çãreference reference1 = { 9, "123456789" };
   struct timeserie‚Çãentry entry‚Çãabsolute1 = { key1, pod1, reference1 };
   if (timeserie‚Çãcreate(&entry‚Çãabsolute1,&timeserie1)) { return; }
   
   struct Unicode key2 = { 5, U"dcba" };
   union historypod pod2 = { .two‚Çãreal=simd_t·µ¶(100.0) }, after‚Çãcommit;
   struct ùüΩbit‚Çãtext‚Çãreference reference2 = { 9, "987654321" };
   struct timeserie‚Çãentry entry‚Çãrelative1 = { key2, pod2, reference2 };
   if (timeserie‚Çãdelta(&entry‚Çãrelative1,&after‚Çãcommit,&serie1,two‚Çãreal‚Çãaddition)) { return; }
   
   if (timeserie‚Çãcommit(&revision,entry‚Çãrow,&serie1,two‚Çãreal‚Çãaddition)) { return; }
   
   version‚Çãts ordin = 102;
   struct Unicodes interesting‚Çãkeys = { { 2, U"12" }, { 2, U"ab" }, { 5, U"bcdef" } };
   state‚Çãbefore(3,interesting‚Çãkeys,ordin, 
     ^(int count, struct Unicodes key[], struct timeserie‚Çãentry row[], int permanent[]) {
      for (int i=0; i<count; ++i) {
        if (permanent[i]) { print("‚¨ö: ‚¨ö", ÔπüS‚ÇÅ(key.tetras,key.unicodes), 
         ÔπüŒª(Arg·¥æ‚Çãoutput scalar, void * context)); }
      }
     }, &serie1,two‚Çãreal‚Çãaddition);
   print("\n"); state‚Çãafter(3,interesting‚Çãkeys,ordin, 
    ^(int count, struct Unicodes key[], struct timeserie‚Çãentry row[], int permanent[]) {
      for (int i=0; i<count; ++i) {
        if (permanent[i]) { print("‚¨ö: ‚¨ö", ÔπüS‚ÇÅ(key.tetras,key.unicodes), 
         ÔπüŒª(Arg·¥æ‚Çãoutput scalar, void * context)); }
      }
    }, &serie1,two‚Çãreal‚Çãaddition);
   
   unsigned columns=3;
   Present‚Çãtimeserie‚Çãoverview(columns, &serie1, 
    ^(char8‚Çãt * u8s, __builtin_int_t bytes) {
      print("‚¨ö", Ôπüs8(u8s));
    }
   );
   
   int incl‚Çãtables=1;
   Present‚Çãtimeserie‚Çãdetails(&serie1,incl‚Çãtables, 
    ^(char8‚Çãt * u8s, __builtin_int_t bytes) {
      print("‚¨ö", Ôπüs8(u8s));
    }
   );
   
   timeserie‚Çãuninit(serie1);
}


